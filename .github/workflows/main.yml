name: python-build-pipeline
run-name: Pipeline ${{ github.run.id }} run by ${{ github.actor }}

on:
  push:
    branches: [ 'master' ]

permissions:
  contents: read

jobs:
  pre-check:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.3"

    - name: Validate uv.lock
      run: uv lock --check

    - name: Cache packages
      id: uv-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: uv sync

  check:
    needs: [ 'pre-check' ]
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.3"        

    - name: Cache packages
      id: uv-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Ruff
      run: uv run ruff check ./app/

    - name: Pyright
      run: uv run pyright ./app/ --threads 4

  test:
    needs: ['pre-check', 'check']
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.8.3"        

    - name: Cache packages
      id: uv-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: PyTest
      run: uv run pytest
      continue-on-error: true

  scan:
    needs: ['pre-check']
    name: gitleaks
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_ENABLE_COMMENTS: false
